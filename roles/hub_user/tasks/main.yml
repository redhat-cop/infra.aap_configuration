---
# Create AH Users
- name: Add Automation Hub User
  ansible.hub.ah_user:
    username: "{{ __user_item.username | default(omit) }}"
    # new_name:         "{{ __user.new_name | default(omit) }}"  <-- Needs adding once new_name option added to module
    groups: "{{ __user_item.groups | default(omit) }}"
    append: "{{ __user_item.append | default(omit) }}"
    first_name: "{{ __user_item.first_name | default(omit) }}"
    last_name: "{{ __user_item.last_name | default(omit) }}"
    email: "{{ __user_item.email | default(omit) }}"
    is_superuser: "{{ __user_item.is_superuser | default(omit) }}"
    password: "{{ __user_item.password | default(omit) }}"
    state: "{{ __user_item.state | default(ah_state | default('present')) }}"
    ah_host: "{{ aap_hostname | default(omit) }}"
    ah_username: "{{ aap_username | default(omit) }}"
    ah_password: "{{ aap_password | default(omit) }}"
    ah_path_prefix: "{{ ah_path_prefix | default(omit) }}"
    validate_certs: "{{ aap_validate_certs | default(omit) }}"
    request_timeout: "{{ aap_request_timeout | default(omit) }}"
  loop: "{{ aap_user_accounts }}"
  loop_control:
    loop_var: __user_item
    label: "{{ __operation.verb }} the label {{ __user_item.name }} to Controller"
    pause: "{{ ah_configuration_user_accounts__loop_delay }}"
  no_log: "{{ ah_configuration_user_secure_logging }}"
  async: "{{ ah_configuration_user_async_timeout }}"
  poll: 0
  register: __users_job_async
  changed_when: not __users_job_async.changed
  vars:
    __operation: "{{ operation_translate[__user_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir }}"

- name: Create User | Wait for finish the user creation
  ansible.builtin.async_status:
    jid: "{{ __users_job_async_result_item.ansible_job_id }}"
  register: __users_job_async_result
  until: __users_job_async_result.finished
  retries: "{{ ah_configuration_user_async_retries }}"
  delay: "{{ ah_configuration_user_async_delay }}"
  loop: "{{ __users_job_async.results }}"
  loop_control:
    loop_var: __users_job_async_result_item
    label: "{{ __operation.verb }} Label {{ __users_job_async_result_item.__user_item.name }} | Wait for finish the Label {{ __operation.action }}"
  when: __users_job_async_result_item.ansible_job_id is defined
  no_log: "{{ ah_configuration_user_secure_logging }}"
  vars:
    __operation: "{{ operation_translate[__users_job_async_result_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir }}"
...
