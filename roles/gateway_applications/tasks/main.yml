---
# Create gateway applications
- name: Managing gateway Applications
  ansible.platform.application:
    name: "{{ __gateway_application_item.name | mandatory }}"
    new_name: "{{ __gateway_application_item.new_name | default(omit, true) }}"
    organization: "{{ __gateway_application_item.organization | mandatory }}"
    new_organization: "{{ __gateway_application_item.new_organization | default(omit, true) }}"
    description: "{{ __gateway_application_item.description | default(('' if gateway_applications_enforce_defaults else omit), true) }}"
    authorization_grant_type: "{{ __gateway_application_item.authorization_grant_type | default('password') }}"
    client_type: "{{ __gateway_application_item.client_type | default('public') }}"
    redirect_uris: "{{ __gateway_application_item.redirect_uris | default(omit) }}"
    skip_authorization: "{{ __gateway_application_item.skip_authorization | default((false if gateway_applications_enforce_defaults else omit), true) }}"
    algorithm: "{{ __gateway_application_item.algorithm | default(omit, true) }}"
    post_logout_redirect_uris: "{{ __gateway_application_item.post_logout_redirect_uris | default(omit, true) }}"
    user: "{{ __gateway_application_item.user | default(omit, true) }}"
    state: "{{ __gateway_application_item.state | default(platform_state | default(omit, true)) }}"

    # Role specific options
    gateway_hostname: "{{ aap_hostname | default(omit, true) }}"
    gateway_username: "{{ aap_username | default(omit, true) }}"
    gateway_password: "{{ aap_password | default(omit, true) }}"
    gateway_token: "{{ aap_token | default(omit, true) }}"
    gateway_request_timeout: "{{ aap_request_timeout | default(omit, true) }}"
    gateway_validate_certs: "{{ aap_validate_certs | default(omit) }}"
  loop: "{{ aap_applications }}"
  loop_control:
    loop_var: __gateway_application_item
    label: "{{ __operation.verb }} AAP Platform Applications {{ __gateway_application_item.name }}"
    pause: "{{ gateway_applications_loop_delay }}"
  no_log: "{{ gateway_applications_secure_logging }}"
  async: "{{ ansible_check_mode | ternary(0, 1000) }}"
  poll: 0
  register: __gateway_applications_job_async
  changed_when: not __gateway_applications_job_async.changed
  vars:
    __operation: "{{ operation_translate[__gateway_application_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir | default(omit) }}"

- name: Applications | Wait for finish the configuration
  ansible.builtin.async_status:
    jid: "{{ __gateway_applications_job_async_results_item.ansible_job_id }}"
  register: __gateway_applications_job_async_result
  until: __gateway_applications_job_async_result.finished
  retries: "{{ gateway_applications_async_retries }}"
  delay: "{{ gateway_applications_async_delay }}"
  loop: "{{ __gateway_applications_job_async.results }}"
  loop_control:
    loop_var: __gateway_applications_job_async_results_item
    label: "{{ __operation.verb }} AAP Platform Applications {{ __gateway_applications_job_async_result.__gateway_application_item.name }} | Wait for finish the Applications
      {{ __operation.action }}"
  when: __gateway_applications_job_async_results_item.ansible_job_id is defined
  no_log: "{{ applications_secure_logging }}"
  vars:
    __operation: "{{ operation_translate[__gateway_applications_job_async_results_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir | default(omit) }}"
...
