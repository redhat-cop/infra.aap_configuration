---
# Create AH EE repository
- name: Sync Automation Hub EE Repository
  ansible.hub.ah_ee_repository_sync:
    name: "{{ __ee_repository_item.name }}"
    wait: "{{ __ee_repository_item.wait | default(omit) }}"
    interval: "{{ __ee_repository_item.interval | default(ah_configuration_ee_repository_sync_async_delay) }}"
    timeout: "{{ __ee_repository_item.timeout | default(omit) }}"
    ah_host: "{{ aap_hostname | default(omit) }}"
    ah_username: "{{ aap_username | default(omit) }}"
    ah_password: "{{ aap_password | default(omit) }}"
    ah_path_prefix: "{{ ah_path_prefix | default(omit) }}"
    validate_certs: "{{ aap_validate_certs | default(omit) }}"
    request_timeout: "{{ aap_request_timeout | default(omit) }}"
  loop: "{{ ah_ee_repositories }}"
  loop_control:
    loop_var: __ee_repository_item
    label: "{{ __operation.verb }} the label {{ __ah_configuration_ee_repository_sync__item.name }} to Controller"
    pause: "{{ ah_configuration_ee_repository_sync__loop_delay }}"
  when: __ee_repository_item.sync | default(false)
  no_log: "{{ ah_configuration_ee_repository_secure_logging }}"
  async: "{{ ah_configuration_ee_repository_sync_async_timeout }}"
  poll: 0
  register: __ee_repository_syncs_job_async
  changed_when: not __ee_repository_syncs_job_async.changed
  vars:
    __operation: "{{ operation_translate[__ee_repository_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir }}"

- name: EE Repository Sync | Wait for finish the ee_repository_sync to finish
  ansible.builtin.async_status:
    jid: "{{ __ee_repository_syncs_job_async_result_item.ansible_job_id }}"
  register: __ee_repository_syncs_job_async_result
  until: __ee_repository_syncs_job_async_result.finished
  retries: "{{ ah_configuration_ee_repository_sync_async_retries }}"
  delay: "{{ ah_configuration_ee_repository_sync_async_delay }}"
  loop: "{{ __ee_repository_syncs_job_async.results }}"
  loop_control:
    loop_var: __ee_repository_syncs_job_async_result_item
    label: "{{ __operation.verb }} Label {{ __ee_repository_syncs_job_async_result_item.__ee_repository_sync_item.name }} | Wait for finish the Label {{ __operation.action
      }}"
  when: __ee_repository_syncs_job_async_result_item.ansible_job_id is defined
  no_log: "{{ ah_configuration_ee_repository_secure_logging }}"
  vars:
    __operation: "{{ operation_translate[__ee_repository_syncs_job_async_result_item.state | default(platform_state) | default('present')] }}"
    ansible_async_dir: "{{ aap_configuration_async_dir }}"
...
